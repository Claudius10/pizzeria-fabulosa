server:
  port: 8081

spring:

  application:
    name: "pizzeria-business-client"

  security:
    oauth2:
      client:
        registration:
          business-client:
            provider: spring
            client-id: business-client
            client-name: business-client
            client-secret: business
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8081/login/oauth2/code/{registrationId}"
            scope: openid, order
        provider:
          spring:
            issuer-uri: http://localhost:9000

  ssl:
    bundle:
      jks:
        business-client-ssl:
          key:
            alias: pizzeria-business-client
            password: password
          keystore:
            location: /home/claudio/IdeaProjects/pizzeria-fabulosa/api-client/pizzeria-business-client/src/main/resources/keystore.p12
            password: password
            type: PKCS12
          truststore:
            location: /home/claudio/IdeaProjects/pizzeria-fabulosa/api-client/pizzeria-business-client/src/main/resources/keystore.p12
            password: password
            type: PKCS12

  datasource:
    url: jdbc:mariadb://localhost:3306/pizzeria
    username: root
    password: root
    #    url: jdbc:mariadb://db:3306/pizzeria
    #    username: chef
    #    password: pizza
    hikari:
      initialization-fail-timeout: 60000

  jpa:
    properties:
      jakarta:
        persistence:
          sharedCache:
            mode: UNSPECIFIED
    open-in-view: false
    hibernate:
      ddl-auto: update

angular-app:
  base-uri: http://192.168.1.128:4200

business-resource:
  base-uri: https://127.0.0.1:8443

springdoc:
  api-docs:
    path: /api/v1/docs
  swagger-ui:
    path: /api/v1/docs/swagger
    operations-sorter: method

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG